version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: vibebot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-vibebot}
      POSTGRES_USER: ${POSTGRES_USER:-vibebot}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-vibebot_password}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-vibebot}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vibebot-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: vibebot-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-vibebot_redis_password}
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vibebot-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vibebot-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${BACKEND_PORT:-3000}
      DATABASE_URL: postgresql://${POSTGRES_USER:-vibebot}:${POSTGRES_PASSWORD:-vibebot_password}@postgres:5432/${POSTGRES_DB:-vibebot}?schema=public
      REDIS_URL: redis://:${REDIS_PASSWORD:-vibebot_redis_password}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}
    ports:
      - '${BACKEND_PORT:-3000}:3000'
    volumes:
      - ./prisma:/app/prisma
      - backend_uploads:/app/uploads
    networks:
      - vibebot-network
    command: sh -c "npx prisma migrate deploy && node dist/server.js"

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: vibebot-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000}
      VITE_WS_URL: ${VITE_WS_URL:-ws://localhost:3000}
    ports:
      - '${FRONTEND_PORT:-80}:80'
    networks:
      - vibebot-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  vibebot-network:
    driver: bridge
